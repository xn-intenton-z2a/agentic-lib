The current state, 1 year into hobby time development, is that with single sentence the workflows can set up a whole
repository focused on a single mission, gather current information to expanded the mission into into features and
develop a simple command line or webb app. This commit created an app with a CLI and web front end to print out random faces:

>>> Create a CLI app that outputs random facial expressions using ascii art. This will be the emotional feedback mechanism for an AI.

Key problems which remain are; when to stop, and there is still build work before a revenue stream can be established.

An idea today is to create a cost model for the features. The cost model will be the actual resources used and this,
combined with the implementation of a definition of done, will provide the mechanism to optimise the workflows.

The focus at the moment is an MVP of something hooked into intent√Øon.com, then a BYO Keys in GitHub Action in GitHub Marketplace.

I year ago something that could resolve eslint issues above the capabilities --fix, seemed ground breaking, today
generating a whole app is a late entrant to the market. Handing over a self-directed coding system is more interesting.
