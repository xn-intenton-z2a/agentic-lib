# .github/workflows/linting-worker.yml
name: 5. Linting Worker
run-name: "Linting Worker [${{ github.ref_name }}]"
concurrency: worker-${{ github.ref_name }}

on:
  workflow_dispatch:
  schedule:
    # Continuous worker poll
    #- cron: '0,10,20,30,40,50 * * * *'
    - cron: '0,15,30,45 * * * *'
    #- cron: '30 * * * *'

jobs:

  poll-branch:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: List Branches
        id: list-branches
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branches = await github.rest.repos.listBranches({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const targetBranches = branches.data
              .filter(branch => branch.name.startsWith('issue-'))
              .map(branch => branch.name);
            core.setOutput('branches', JSON.stringify(targetBranches));

      - name: Set Up Matrix
        if: ${{ steps.list-branches.outputs.branches != '[]' }}
        shell: bash
        run: |
          echo "BRANCHES=${{ steps.list-branches.outputs.branches }}" >> $GITHUB_ENV

      - name: Stop if No Branches
        if: ${{ steps.list-branches.outputs.branches == '[]' }}
        run: echo "No branches to process."

    outputs:
      branches: ${{ steps.list-branches.outputs.branches }}

  process_branches:
    needs:
      - poll-branch
    if: ${{ needs.poll-branch.outputs.branches != '[]' }}
    permissions:
      contents: write
      pull-requests: write
    strategy:
      matrix:
        branch: ${{ fromJson(needs.poll-branch.outputs.branches) }}
    uses: './.github/workflows/wfr-apply-fixes-sarif-on-branches.yml'
    with:
      branch: ${{ matrix.branch }}
      resultsToResolve: '3'
      iterations: '10'
      baseDir: './'
      buildScript: 'npm run build'
      sarifScript: 'npx prettier --write  ./src/ ./tests/ > /dev/null 2>&1 || true ; npx --silent eslint --fix --format=@microsoft/eslint-formatter-sarif ./src/ ./tests/'
      testScript: 'npm test'
      npmAuth: 'true'
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}
