# .github/workflows/wfr-create-intention.yml
name: âˆž Create intention

on:
  workflow_call:
    inputs:
      branchPrefix:
        description: 'The prefix for the branch name. e.g. "issue-"'
        type: string
        required: true
      testScript:
        description: 'The script must be runnable as: `npm ci ; <script>` and succeed with a zero exit code. e.g. `npm test`'
        type: string
        required: false
        default: 'npm test'
      npmAuth:
        description: 'Whether to authenticate with npm. e.g. "true"'
        type: string
        required: false
        default: 'true'
      gitUserEmail:
        description: 'The email to use for git commits. e.g. "action@github.com"'
        type: string
        required: false
        default: 'action@github.com'
      gitUserName:
        description: 'The name to use for git commits. e.g. "GitHub Actions[bot]"'
        type: string
        required: false
        default: 'GitHub Actions[bot]'
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true
    outputs:
      fixRequired:
        description: 'Whether a fix is still required after execution.'
        value: ${{ jobs.create-fix-intention.outputs.fixRequired }}

jobs:
  create-fix-intention:
    runs-on: ubuntu-latest

    env:
      branchPrefix: ${{ inputs.branchPrefix || 'fix' }}
      testScript: ${{ inputs.testScript || 'npm test' }}
      npmAuth: ${{ inputs.npmAuth || 'true' }}
      gitUserEmail: ${{ inputs.gitUserEmail || 'action@github.com' }}
      gitUserName: ${{ inputs.gitUserName || 'GitHub Actions[bot]' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - run: git pull

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Check GitHub authentication
        if: ${{ env.npmAuth == 'true' }}
        shell: bash
        run: |
          curl --include --header "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}" https://api.github.com/user

      - name: Set up .npmrc
        if: ${{ env.npmAuth == 'true' }}
        shell: bash
        run: |
          echo "@polycode-projects:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}" >> .npmrc
          echo "always-auth=true" >> .npmrc

      - run: npm ci

      - name: Run test script
        shell: bash
        run: |
          ${{ env.testScript }}

      - name: Tear down .npmrc
        if: ${{ env.npmAuth == 'true' }}
        run: rm -f .npmrc

      - name: Ensure there isn't already a branch with prefix ${{ env.branchPrefix }}
        shell: bash
        run: |
          git fetch origin
          if git branch -r | grep -q "origin/${{ env.branchPrefix }}"; then
            echo "A branch with the intention type prefix '${{ env.branchPrefix }}' already exists."
            exit 1
          else
            echo "No existing branch with the intention type prefix found."
          fi

      - name: uuid
        id: uuid
        shell: bash
        run: |
          node -e 'console.log(`uuid=${require("uuid").v7()}`);' >> $GITHUB_OUTPUT

      - name: Commit to new branch
        shell: bash
        run: |
          git config --local user.email '${{ env.gitUserEmail }}'
          git config --local user.name '${{ env.gitUserName }}'
          git switch -c "${{ env.branchPrefix }}-${{ steps.uuid.outputs.uuid }}"
          git push --set-upstream origin "${{ env.branchPrefix }}-${{ steps.uuid.outputs.uuid }}" -v

      - name: Examine the git working copy
        shell: bash
        run: |
          git config --local user.email '${{ env.gitUserEmail }}'
          git config --local user.name '${{ env.gitUserName }}'
          git status -v
