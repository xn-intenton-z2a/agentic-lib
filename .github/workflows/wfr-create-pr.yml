# .github/workflows/wfr-create-pr.yml
name: âˆž Create a PR

on:
  workflow_call:
    inputs:
      branch:
        description: 'The branch to create a PR from. e.g. "issue-123"'
        type: string
        required: true
      baseBranch:
        description: 'The base branch to compare the PRs against. e.g. "main"'
        type: string
        required: false
        default: 'main'
      pulls:
        description: 'The maximum number of PRs to process. e.g. "100"'
        type: string
        required: false
        default: '100'
      commit-message:
        description: 'The commit message to use for the PR. e.g. "Ready for pull"'
        type: string
        required: false
        default: 'Ready for pull'
      label:
        description: 'The labels to apply to the PR. e.g. "automerge"'
        type: string
        required: false
        default: 'automerge'
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false

jobs:
  create-pr:
    runs-on: ubuntu-latest

    env:
      branch: ${{ inputs.branch }}
      baseBranch: ${{ inputs.baseBranch || 'main' }}
      pulls: ${{ inputs.pulls || '100' }}
      commit-message: 'Ready for pull'
      label: 'automerge'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create pull request, if fixed after re-checking linting
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            const { data: existingPulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${{ env.branch }}`,
              base: '${{ env.baseBranch }}',
              state: 'open',
            });
            if (existingPulls.length === 0) {
              const { data: pr } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '${{ env.commit-message }}',
                head: '${{ env.branch }}',
                base: '${{ env.baseBranch }}',
                body: '${{ env.commit-message }}',
                maintainer_can_modify: true,
              });
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: ['${{ env.label }}'],
              });
              core.info(`Pull request created: ${pr.html_url}`);
            } else {
              core.info('Pull request already exists for this branch.');
            }
