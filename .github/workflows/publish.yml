# .github/workflows/publish.yml
name: Publish packages
run-name: 'Publish packages [${{ github.ref_name }}] [${{ github.event.head_commit.message }}]'
concurrency: branch-${{ github.ref_name }}

on:
  push:
    branches:
      # When publishing from a branch, add branch name here, e,g, 'beta'
      - main
    paths:
      - '**/*.sh'
      - '**/*.js'
      - '**/*.json'
      - '**/*.yml'
      - '**/*.properties'
      - '!intentions/**'
      - '!conversations/**'
      - '!exports/**'
      - '!programs/**'
      - '!results/**'
  workflow_dispatch:
    inputs:
      versionIncrement:
        description: 'Select the Semantic Versioning segment to increment'
        required: true
        default: 'prerelease'
        type: choice
        options:
          - prerelease
          - patch
          - minor
          - major
          - premajor
          - preminor
          - prepatch

jobs:

  npm-test-and-run-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci

      - name: test
        id: test
        shell: bash
        run: 'npm test'

      - name: main
        id: main
        shell: bash
        run: timeout 5m npm run start

  publish:
    needs:
      - npm-test-and-run-main
    permissions:
      contents: write
      packages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-publish.yml@main'
    with:
      versionIncrement: ${{ inputs.versionIncrement || 'prerelease' }}
      buildScript: 'npm run build'
      releaseNotes: 'Release incrment: ${{ inputs.versionIncrement }}.'
      npmAuthOrganisation: 'xn-intenton-z2a'
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'

  verify-tag:
    needs:
      - publish
    if: ${{ inputs.versionIncrement == 'major' || inputs.versionIncrement == 'minor' || inputs.versionIncrement == 'patch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Verify that release tag exists
        run: |
          taggedVersion="v${{ needs.publish.outputs.releasedVersion }}"
          echo "Checking for tag: ${taggedVersion?}"
          if git rev-parse "${taggedVersion?}" >/dev/null 2>&1; then
            echo "Tag ${taggedVersion?} exists."
          else
            echo "Tag ${taggedVersion?} does not exist!"
            exit 1
          fi
