# .github/workflows/wfr-automerge-find-pr-in-check-suite.yml
name: âˆž Get Pull Request from Check Suite

on:
  workflow_call:
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false
    outputs:
      pullNumber:
        description: 'The pull request number.'
        value: ${{ jobs.check-pr.outputs.pullNumber }}
      shouldSkipMerge:
        description: 'Set to "true", if the merge request should be skipped because there is not a PR in the right state.'
        value: ${{ jobs.check-pr.outputs.shouldSkipMerge }}
      prMerged:
        description: 'Set to "true", if the PR has been merged either already or by this process.'
        value: ${{ jobs.check-pr.outputs.prMerged }}

jobs:
  find-pr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: find-pr
        id: find-pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          script: |            
            const checkSuite = context.payload.check_suite;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const headSha = checkSuite.head_sha;
            let pullNumber;
            let shouldSkipMerge;
            let prMerged;
            
            const { data: prs } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner,
              repo,
              commit_sha: headSha,
            });

            if (prs.length === 0) {
              core.info('No pull requests associated with this check suite.');            
              pullNumber = '';
              shouldSkipMerge = 'true';
              prMerged = 'false';
            } else {

              const openPRs = prs.filter(pr => pr.state === 'open');
              const prWithAutomerge = openPRs.find(pr => pr.labels.some(label => label.name === 'automerge'));
  
              if (!prWithAutomerge) {
                core.info('No open pull requests with the "automerge" label.');
                pullNumber = undefined;
                shouldSkipMerge = 'true';
                prMerged = 'false';
              } else {
                pullNumber = prWithAutomerge.number;
                shouldSkipMerge = 'false';
                prMerged = 'false';
              }
              
              core.setOutput('pullNumber', !pullNumber ? '' : pullNumber.toString());
              core.setOutput('shouldSkipMerge', shouldSkipMerge);
              core.setOutput('prMerged', prMerged);
              core.info(`pullNumber: '${!pullNumber ? '' : pullNumber.toString()}`);
              core.info(`shouldSkipMerge: '${shouldSkipMerge}'`);
              core.info(`prMerged: '${prMerged}'`);
            }

    outputs:
      pullNumber: ${{ steps.find-pr.outputs.pullNumber }}
      shouldSkipMerge: ${{ steps.find-pr.outputs.shouldSkipMerge }}
      prMerged: ${{ steps.find-pr.outputs.prMerged }}
