# .github/workflows/agent-issue-to-ready-issue
#
# This file is part of the example suite for `agentic-lib` see: https://github.com/xn-intenton-z2a/agentic-lib
# This file is licensed under the MIT License. For details, see LICENSE-MIT

name: agent-issue-to-ready-issue
concurrency: agent-issue-to-ready-issue
run-name: "agent-issue-to-ready-issue [${{ github.ref_name }}]"

on:
  workflow_dispatch:
    inputs:
      issueNumber:
        description: 'The issue number to resolve. If not provided, the workflow will select one based on label. e.g. "123"'
        required: false
        type: string
        default: ''
      target:
        description: 'The source file whose content is used in the resolution prompt. e.g. "src/lib/main.js"'
        required: false
        type: string
        default: 'src/lib/main.js'
      testFile:
        description: 'The test file to run to validate the resolution. e.g. "tests/unit/main.test.js"'
        required: false
        type: string
        default: 'tests/unit/main.test.js'
      selectionLabel:
        description: 'Label used to filter issues for resolution. e.g. "automated"'
        required: false
        type: string
        default: 'automated'
  #workflow_run:
  #  workflows:
  #    - agent-feature-to-issue
  #    - agent-prompt-to-issue
  #    - agent-linting-to-issue
  #  types:
  #    - completed
  schedule:
    - cron: '50 */12 * * *' # schedule-1
    #- cron: '50 */4 * * *' # schedule-2
    #- cron: '50 */1 * * *' # schedule-3
    #- cron: '50 */1 * * *' # schedule-4

jobs:

  agentic-lib:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: agentic-lib
        id: agentic-lib
        shell: bash
        run: |
          featureDevelopmentIssuesWipLimit=$(grep '^featureDevelopmentIssuesWipLimit:' .github/agentic-lib.yml | awk '{print $2}')
          echo "featureDevelopmentIssuesWipLimit=${featureDevelopmentIssuesWipLimit}"
          echo "featureDevelopmentIssuesWipLimit=${featureDevelopmentIssuesWipLimit}" >> $GITHUB_OUTPUT
          maintenanceIssuesWipLimit=$(grep '^maintenanceIssuesWipLimit:' .github/agentic-lib.yml | awk '{print $2}')
          echo "maintenanceIssuesWipLimit=${maintenanceIssuesWipLimit}"
          echo "maintenanceIssuesWipLimit=${maintenanceIssuesWipLimit}" >> $GITHUB_OUTPUT
    outputs:
      featureDevelopmentIssuesWipLimit: ${{ steps.agentic-lib.outputs.featureDevelopmentIssuesWipLimit }}
      maintenanceIssuesWipLimit: ${{ steps.agentic-lib.outputs.maintenanceIssuesWipLimit }}

  select-issue:
    permissions:
      issues: read
      id-token: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-select-issue.yml@main'
    with:
      issueNumber: ${{ inputs.issueNumber || '' }}
      selectionLabel: ${{ inputs.selectionLabel || 'automated' }}
    secrets:
      CHATGPT_API_SECRET_KEY: ${{ secrets.CHATGPT_API_SECRET_KEY }}

  # TODO: Implement agent-issue-to-ready-issue

  stats:
    needs:
      - select-issue
    if: ${{ always() }}
    permissions:
      contents: write
      id-token: write
      pages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-github-stats-to-aws.yml@main'
    with:
      cache: 'npm'
      npmAuthOrganisation: '@xn-intenton-z2a'
      lastActivityName: ${{ github.workflow }}
      lastActivityBranchName: ${{ github.ref_name }}
      nextIssue: "[${{ needs.select-issue.outputs.issueNumber }}] ${{ needs.select-issue.outputs.issueTitle }} ${{ needs.select-issue.outputs.issueLabels }}"
      public: 'public'
      s3BucketUrl: 's3://agentic-lib-telemetry-bucket/events/'
      s3WebsiteBucketUrl: 's3://agentic-lib-public-website-stats-bucket/'
      iamActionsRoleArn: 'arn:aws:iam::541134664601:role/agentic-lib-github-actions-role'
      iamStatsBucketWriterRoleArn: 'arn:aws:iam::541134664601:role/agentic-lib-deployment-role'
      iamPublicWebsiteStatsBucketWriterRoleArn: 'arn:aws:iam::541134664601:role/agentic-lib-public-website-stats-bucket-writer-role'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
