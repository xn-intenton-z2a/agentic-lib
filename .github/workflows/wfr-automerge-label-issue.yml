# .github/workflows/wfr-automerge-label-issue.yml

#
# agentic-lib
# Copyright (C) 2025 Polycode Limited
#
# This file is part of agentic-lib.
#
# agentic-lib is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License v3.0 (GPL‑3).
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# IMPORTANT: Any derived work must include the following attribution:
# "This work is derived from https://github.com/xn-intenton-z2a/agentic-lib"
#

name: ∞ automerge-label-issue

on:
  workflow_call:
    inputs:
      pullNumber:
        description: 'The pull request number. e.g. "123"'
        type: string
        required: true
      branchPrefix:
        description: 'The prefix for the issue branch. e.g. "agentic-lib-issue-".'
        type: string
        required: true
      commentPrefix:
        description: 'The prefix for the comment. e.g. "The feature branch ".'
        type: string
        required: false
        default: 'The feature branch has been merged: '
      s3BucketUrl:
        description: 'The S3 bucket URL with prefix to use. e.g. "s3://my-bucket/prefix"'
        type: string
        required: false
        default: ''
      iamRoleArn:
        description: 'The ARN of the IAM role to assume. e.g. "arn:aws:iam::123456789012:role/my-role"'
        type: string
        required: false
        default: ''
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: false
    outputs:
      issueNumber:
        description: 'The issue number just merged. e.g. "123"'
        value: ${{ jobs.check-pr.outputs.issueNumber }}
jobs:
  label-issue:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: extract-issueNumber
        id: extract-issue-number
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            const pullNumber = parseInt('${{ inputs.pullNumber }}', 10);
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            const { data: pullRequest } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: pullNumber,
            });
            const branchName = pullRequest.head.ref;
            const issueNumberMatch = branchName.match(/${{ inputs.branchPrefix }}(\d+)/);
            let issueNumber;
            if (issueNumberMatch) {
              issueNumber = issueNumberMatch[1];
            } else {
              issueNumber = '';
            }

            core.setOutput('issueNumber', issueNumber);
            core.info(`issueNumber '${issueNumber}'`);

      - name: Add "merged" label and comment on issue
        if: steps.extract-issue-number.outputs.issueNumber != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            const pullNumber = parseInt('${{ inputs.pullNumber }}', 10);
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            const { data: pullRequest } = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: pullNumber,
            });
            const issueNumber = '${{ steps.extract-issue-number.outputs.issueNumber }}';
            const branchName = pullRequest.head.ref;
            const commentBody = `${{ inputs.branchPrefix || 'The feature branch has been merged: ' }}${branchName}`;
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['merged']
            });
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: commentBody
            });
    outputs:
      issueNumber: ${{ steps.extract-issue-number.outputs.issueNumber }}

